name: "CodeQL"
on:
  push:
    branches: [ master, dev ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ master ]

jobs:
  analyze-efiXplorer:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      env:
        IDA_SDK: ${{ secrets.DOWNLOAD_LINK_IDA_SDK }}
        PASSWORD: ${{ secrets.ZIP_PASSWORD }}
      run: |
        cd ..
        curl -J -L "$IDA_SDK" -o idasdk80.zip
        unzip -P $PASSWORD idasdk80.zip
        cd efiXplorer/efiXplorer
        mkdir build
        cd build
        cmake .. -DIdaSdk_ROOT_DIR="../../idasdk80" -DHexRaysSdk_ROOT_DIR="../../hexrays_sdk"
        cmake --build . --config Release

  analyze-efiXloader:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      env:
        IDA_SDK: ${{ secrets.DOWNLOAD_LINK_IDA_SDK }}
        PASSWORD: ${{ secrets.ZIP_PASSWORD }}
      run: |
        git submodule update --init --recursive
        cd ..
        curl -J -L "$IDA_SDK" -o idasdk80.zip
        unzip -P $PASSWORD idasdk80.zip
        cd efiXplorer/efiXloader
        mkdir build
        cd build
        cmake .. -DIdaSdk_ROOT_DIR="../../idasdk80"
        cmake --build . --config Release

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
